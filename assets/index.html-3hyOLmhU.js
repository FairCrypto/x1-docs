import{_ as r,r as c,o as p,c as u,d as o,w as n,b as e,a,e as i}from"./app-3X6tQEBe.js";const h={},g=a("h1",{id:"getting-started",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),e(" Getting Started")],-1),b=a("p",null,"Whether you're interested in running an API node for a decentralized application, acting as a validator to stake XN, or operating a full node, contributing to the X1 Network is a rewarding endeavor. Embarking on this journey is straightforward. Simply adhere to the guidelines provided below.",-1),k=a("h2",{id:"installation",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),e(" Installation")],-1),v=a("p",null,"We recommend using the provided system packages to install X1 and run it as a service on your system.",-1),m=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token comment"},"# Install dependencies"),e(`
`),a("span",{class:"token function"},"sudo"),e(),a("span",{class:"token function"},"apt"),e(" update "),a("span",{class:"token parameter variable"},"-y"),e(`
`),a("span",{class:"token function"},"sudo"),e(),a("span",{class:"token function"},"apt"),e(),a("span",{class:"token function"},"install"),e(),a("span",{class:"token parameter variable"},"-y"),e(),a("span",{class:"token function"},"wget"),e(`

`),a("span",{class:"token comment"},"# Download and install the package"),e(`
`),a("span",{class:"token function"},"wget"),e(),a("span",{class:"token parameter variable"},"-O"),e(" go-x1_linux-x86_64.deb "),a("span",{class:"token punctuation"},"\\"),e(` 
  https://github.com/nibty/go-x1/releases/latest/download/go-x1_linux-x86_64.deb
`),a("span",{class:"token function"},"sudo"),e(" dpkg "),a("span",{class:"token parameter variable"},"-i"),e(` go-x1_linux-x86_64.deb
`)])])],-1),f=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token comment"},"# Install dependencies"),e(`
`),a("span",{class:"token function"},"sudo"),e(),a("span",{class:"token function"},"apt"),e(" update "),a("span",{class:"token parameter variable"},"-y"),e(`
`),a("span",{class:"token function"},"sudo"),e(),a("span",{class:"token function"},"apt"),e(),a("span",{class:"token function"},"install"),e(),a("span",{class:"token parameter variable"},"-y"),e(),a("span",{class:"token function"},"wget"),e(`

`),a("span",{class:"token comment"},"# Download and install the package"),e(`
`),a("span",{class:"token function"},"wget"),e(),a("span",{class:"token parameter variable"},"-O"),e(" go-x1_linux-arm64.deb "),a("span",{class:"token punctuation"},"\\"),e(`
  https://github.com/nibty/go-x1/releases/latest/download/go-x1_linux-arm64.deb
`),a("span",{class:"token function"},"sudo"),e(" dpkg "),a("span",{class:"token parameter variable"},"-i"),e(` go-x1_linux-arm64.deb
`)])])],-1),x=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"sudo"),e(" dnf "),a("span",{class:"token function"},"install"),e(),a("span",{class:"token parameter variable"},"-y"),e(),a("span",{class:"token punctuation"},"\\"),e(`
  https://github.com/nibty/go-x1/releases/latest/download/go-x1_linux-x86_64.rpm
`)])])],-1),_=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"sudo"),e(" dnf "),a("span",{class:"token function"},"install"),e(),a("span",{class:"token parameter variable"},"-y"),e(),a("span",{class:"token punctuation"},"\\"),e(`
  https://github.com/nibty/go-x1/releases/latest/download/go-x1_linux-arm64.rpm
`)])])],-1),y=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[e("brew "),a("span",{class:"token function"},"install"),e(` faircrypto/go-x1/x1
`)])])],-1),w=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token comment"},"# Install dependencies (ex: ubuntu)"),e(`
`),a("span",{class:"token function"},"apt"),e(" update "),a("span",{class:"token parameter variable"},"-y"),e(`
`),a("span",{class:"token function"},"apt"),e(),a("span",{class:"token function"},"install"),e(),a("span",{class:"token parameter variable"},"-y"),e(" golang "),a("span",{class:"token function"},"wget"),e(),a("span",{class:"token function"},"git"),e(),a("span",{class:"token function"},"make"),e(`

`),a("span",{class:"token comment"},"# Clone and build the X1 binary"),e(`
`),a("span",{class:"token function"},"git"),e(" clone "),a("span",{class:"token parameter variable"},"--branch"),e(` x1 https://github.com/FairCrypto/go-x1
`),a("span",{class:"token builtin class-name"},"cd"),e(` go-x1
`),a("span",{class:"token function"},"make"),e(` x1

`),a("span",{class:"token comment"},"# Install the binary, config, and systemd service file"),e(`
`),a("span",{class:"token function"},"sudo"),e(),a("span",{class:"token function"},"make"),e(),a("span",{class:"token function"},"install"),e(`
`)])])],-1),A=i('<h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><h3 id="command-line-flags" tabindex="-1"><a class="header-anchor" href="#command-line-flags" aria-hidden="true">#</a> Command Line Flags</h3><p>You can adjust the X1 command line flags by modifying the environment file. On a Linux system, this file is located at <code>/etc/default/x1</code>. If you&#39;re using macOS, you&#39;ll find it at <code>$HOMEBREW_PREFIX/etc/default/x1</code>.</p><p>We provide ready-to-use example environment files for each node type. The default environment file is for a full node.</p><blockquote><p>Run the following command to copy the example environment file</p></blockquote>',5),E=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"cp"),e(" /system/usr/share/x1/full-node-env "),a("span",{class:"token string"},[e('"'),a("span",{class:"token variable"},"$HOMEBREW_PREFIX"),e('/etc/default/x1"')]),e(`
`)])])],-1),R=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"cp"),e(" /system/usr/share/x1/api-node-env "),a("span",{class:"token string"},[e('"'),a("span",{class:"token variable"},"$HOMEBREW_PREFIX"),e('/etc/default/x1"')]),e(`
`)])])],-1),q=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"cp"),e(" /system/usr/share/x1/archive-node-env "),a("span",{class:"token string"},[e('"'),a("span",{class:"token variable"},"$HOMEBREW_PREFIX"),e('/etc/default/x1"')]),e(`
`)])])],-1),I=a("div",{class:"custom-container tip"},[a("p",{class:"custom-container-title"},"TIP"),a("p",null,"Start with a full node now if you plan on later running a validator node.")],-1),N={id:"user-group",tabindex:"-1"},S=a("a",{class:"header-anchor",href:"#user-group","aria-hidden":"true"},"#",-1),B=i(`<p>By default, the service will run as the user and group <code>x1</code> with the home directory <code>/var/lib/x1</code>.</p><blockquote><p>You may change the user to your needs by running the following command.</p></blockquote><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Edit the service file</span>
<span class="token function">sudo</span> systemctl edit x1.service

<span class="token comment"># Add the following lines with an existing</span>
<span class="token comment"># user and group of your choice.</span>
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">User</span><span class="token operator">=</span><span class="token operator">&lt;</span>user<span class="token operator">&gt;</span> 
<span class="token assign-left variable">Group</span><span class="token operator">=</span><span class="token operator">&lt;</span>group<span class="token operator">&gt;</span>
</code></pre></div><h2 id="running-the-node" tabindex="-1"><a class="header-anchor" href="#running-the-node" aria-hidden="true">#</a> Running the Node</h2><blockquote><p>Start the service and enable it on boot</p></blockquote><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start x1.service
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> x1.service
</code></pre></div><blockquote><p>Stop the service</p></blockquote><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl stop x1.service
</code></pre></div><blockquote><p>Restart the service</p></blockquote><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart x1.service
</code></pre></div><h3 id="logging" tabindex="-1"><a class="header-anchor" href="#logging" aria-hidden="true">#</a> Logging</h3><blockquote><p>Tail the logs</p></blockquote><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>journalctl <span class="token parameter variable">-t</span> x1 <span class="token parameter variable">-f</span>
</code></pre></div><blockquote><p>See the last 1000 lines of logs</p></blockquote><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>journalctl <span class="token parameter variable">-t</span> x1 <span class="token parameter variable">-n</span> <span class="token number">1000</span>
</code></pre></div><h2 id="console-access" tabindex="-1"><a class="header-anchor" href="#console-access" aria-hidden="true">#</a> Console Access</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Become the x1 user</span>
<span class="token function">sudo</span> <span class="token function">su</span> x1

<span class="token comment"># Attach to the console</span>
x1 attach
</code></pre></div>`,17);function O(C,X){const l=c("CodeTabs"),d=c("Badge");return p(),u("div",null,[g,b,k,v,o(l,{id:"12",data:[{id:"Ubuntu (x86_64)"},{id:"Ubuntu (arm64)"},{id:"Radhat (x86_64)"},{id:"Radhat (arm64)"},{id:"MacOS"},{id:"Source"}],"tab-id":"os"},{title0:n(({value:s,isActive:t})=>[e("Ubuntu (x86_64)")]),title1:n(({value:s,isActive:t})=>[e("Ubuntu (arm64)")]),title2:n(({value:s,isActive:t})=>[e("Radhat (x86_64)")]),title3:n(({value:s,isActive:t})=>[e("Radhat (arm64)")]),title4:n(({value:s,isActive:t})=>[e("MacOS")]),title5:n(({value:s,isActive:t})=>[e("Source")]),tab0:n(({value:s,isActive:t})=>[m]),tab1:n(({value:s,isActive:t})=>[f]),tab2:n(({value:s,isActive:t})=>[x]),tab3:n(({value:s,isActive:t})=>[_]),tab4:n(({value:s,isActive:t})=>[y]),tab5:n(({value:s,isActive:t})=>[w]),_:1},8,["data"]),A,o(l,{id:"49",data:[{id:"Full Node (testnet)"},{id:"API Node (testnet)"},{id:"Archive Node (testnet)"}],"tab-id":"shell"},{title0:n(({value:s,isActive:t})=>[e("Full Node (testnet)")]),title1:n(({value:s,isActive:t})=>[e("API Node (testnet)")]),title2:n(({value:s,isActive:t})=>[e("Archive Node (testnet)")]),tab0:n(({value:s,isActive:t})=>[E]),tab1:n(({value:s,isActive:t})=>[R]),tab2:n(({value:s,isActive:t})=>[q]),_:1},8,["data"]),I,a("h3",N,[S,e(" User/Group "),o(d,{type:"warning",text:"Linux Only",vertical:"middle"})]),B])}const P=r(h,[["render",O],["__file","index.html.vue"]]);export{P as default};
